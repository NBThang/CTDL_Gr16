package view;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import model.manager.ManagerBook;
import model.objects.Book;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.beans.Statement;
import java.sql.*;
import java.util.Vector;

/**
 *
 * @author Name
 */
public class AdminView extends javax.swing.JFrame {
    private String driver = "com.microsoft.sqlserver.jdbc.SQLSeverDriver";
    private String url = "jdbc:mySQL://localhost:3306/bookdata";
    private String urldangnhap = "jdbc:mySQL://localhost:3306/dangnhap";
    private String user = "root";
    private String password = "";
    private Statement st;
    private ResultSet rs;

    ManagerBook managerBook = new ManagerBook();

    /**
     * Creates new form AdminView
     */
    public AdminView() {
        initComponents();
        getDataBookToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btndelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnrequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tổng số sách");

        jLabel2.setText(managerBook.size()+"");

        jLabel3.setText("Tổng số người dùng");

        jLabel4.setText(getTotalUser()+"");

        btndelete.setText("Xóa");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "ID", "Tên sách", "Tác giả", "Thể loại"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnrequest.setText("Thay đổi");
        btnrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btndelete)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(33, 33, 33)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnrequest)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(51, 51, 51)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2))
                                                .addGap(28, 28, 28)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4))
                                                .addGap(57, 57, 57)
                                                .addComponent(btndelete))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnrequest)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setName("book");
        pack();
    }// </editor-fold>

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (jTable1.getName().equals("book")) {
            int row = jTable1.getSelectedRow();

            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng để xóa");
            } else {
                String id = jTable1.getValueAt(row, 0).toString();
                String tensach = jTable1.getValueAt(row, 1).toString();
                String tacgia = jTable1.getValueAt(row, 2).toString();
                String theloai = jTable1.getValueAt(row, 3).toString();

                Book book = new Book(id, tensach, tacgia, theloai);

                managerBook.removeBook(book);

                getDataBookToTable();
                jLabel2.setText(managerBook.size()+"");

                JOptionPane.showMessageDialog(this, "Xóa thành công");
            }
        } else {
            int row = jTable1.getSelectedRow();

            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng để xóa");
            } else {
                String username = jTable1.getValueAt(row, 0).toString();

                if (username.equals("admin")) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa admin");
                    return;
                }

                remoteUser(username);

                getDataUserToTable();
                jLabel4.setText(getTotalUser()+"");
                System.out.println(username);
                JOptionPane.showMessageDialog(this, "Xóa thành công");
            }
        }
    }

    private void btnrequestActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (jTable1.getName().equals("book")) {
            jTable1.setName("account");

            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                            "User", "Email", "Password"
                    }
            ));

            getDataUserToTable();
        } else {
            jTable1.setName("book");

            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                            "ID", "Tên sách", "Tác giả", "Thể loại"
                    }
            ));

            getDataBookToTable();
        }
    }

    private void getDataBookToTable(){
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection con = DriverManager.getConnection(url, user, password);
            String sql = "select * from book";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel recordTable = (DefaultTableModel) jTable1.getModel();
            recordTable.setRowCount(0);

            while (rs.next()) {
                Vector columdata = new Vector<>();

                for (int i = 1; i <= q; i++) {
                    columdata.add(rs.getString("id"));
                    columdata.add(rs.getString("tensach"));
                    columdata.add(rs.getString("tacgia"));
                    columdata.add(rs.getString("theloai"));
                }

                recordTable.addRow(columdata);
            }
        } catch (Exception e) {

        }
    }

    private void getDataUserToTable() {
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection con = DriverManager.getConnection(urldangnhap, user, password);
            String sql = "select * from account";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel recordTable = (DefaultTableModel) jTable1.getModel();
            recordTable.setRowCount(0);

            while (rs.next()) {
                Vector columdata = new Vector<>();

                for (int i = 1; i <= q; i++) {
                    columdata.add(rs.getString("usename"));
                    columdata.add(rs.getString("gmail"));
                    columdata.add(rs.getString("pass"));
//                    columdata.add(rs.getString("theloai"));
                }

                recordTable.addRow(columdata);
            }
        } catch (Exception e) {

        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminView().setVisible(true);
            }
        });
    }

    public int getTotalUser() {
        int numberUser = 0;

        try {
            Connection connection = DriverManager.getConnection(urldangnhap, user, password);

            // Truy vấn SQL để đếm số lượng bản ghi trong bảng book
            String countQuery = "SELECT COUNT(*) AS row_count FROM account";
            PreparedStatement preparedStatement = connection.prepareStatement(countQuery);
            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                numberUser = resultSet.getInt("row_count");
            }
        } catch (Exception e) {

        }

        return numberUser;
    }

    public void remoteUser(String usename) {
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            Connection con = DriverManager.getConnection(urldangnhap, user, password);

            java.sql.Statement st = con.createStatement();

            String sql = "DELETE FROM account WHERE usename = '" + usename + "'";

            st.executeUpdate(sql);

        } catch (Exception e){

        }
    }
    // Variables declaration - do not modify
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnrequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration
}
